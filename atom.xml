<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>雨中過客</title>
  
  <subtitle>心情不好就不想说话</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://kejieliu.github.io/"/>
  <updated>2019-01-08T12:21:51.046Z</updated>
  <id>https://kejieliu.github.io/</id>
  
  <author>
    <name>Jim Liu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>redux动手实现</title>
    <link href="https://kejieliu.github.io/2019/01/08/redux%E5%8A%A8%E6%89%8B%E5%AE%9E%E7%8E%B0/"/>
    <id>https://kejieliu.github.io/2019/01/08/redux动手实现/</id>
    <published>2019-01-08T11:58:11.000Z</published>
    <updated>2019-01-08T12:21:51.046Z</updated>
    
    <content type="html"><![CDATA[<p>一段代码，终于理解得比较深了<br>摘自<a href="http://huziketang.mangojuice.top/books/react/lesson34" target="_blank" rel="noopener">动手实现Redux</a><br>下面这段代码暂时和React没有关系<br><a id="more"></a><br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">createStore</span> (<span class="params">reducer</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">let</span> state = <span class="literal">null</span></span><br><span class="line">  <span class="keyword">const</span> listeners = []</span><br><span class="line">  <span class="keyword">const</span> subscribe = <span class="function">(<span class="params">listener</span>) =&gt;</span> listeners.push(listener)</span><br><span class="line">  <span class="keyword">const</span> getState = <span class="function"><span class="params">()</span> =&gt;</span> state</span><br><span class="line">  <span class="keyword">const</span> dispatch = <span class="function">(<span class="params">action</span>) =&gt;</span> &#123;</span><br><span class="line">    state = reducer(state, action)</span><br><span class="line">    listeners.forEach(<span class="function">(<span class="params">listener</span>) =&gt;</span> listener())</span><br><span class="line">  &#125;</span><br><span class="line">  dispatch(&#123;&#125;) <span class="comment">// 初始化 state</span></span><br><span class="line">  <span class="keyword">return</span> &#123; getState, dispatch, subscribe &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">renderApp</span> (<span class="params">newAppState, oldAppState = &#123;&#125;</span>) </span>&#123; <span class="comment">// 防止 oldAppState 没有传入，所以加了默认参数 oldAppState = &#123;&#125;</span></span><br><span class="line">  <span class="keyword">if</span> (newAppState === oldAppState) <span class="keyword">return</span> <span class="comment">// 数据没有变化就不渲染了</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'render app...'</span>)</span><br><span class="line">  renderTitle(newAppState.title, oldAppState.title)</span><br><span class="line">  renderContent(newAppState.content, oldAppState.content)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">renderTitle</span> (<span class="params">newTitle, oldTitle = &#123;&#125;</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (newTitle === oldTitle) <span class="keyword">return</span> <span class="comment">// 数据没有变化就不渲染了</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'render title...'</span>)</span><br><span class="line">  <span class="keyword">const</span> titleDOM = <span class="built_in">document</span>.getElementById(<span class="string">'title'</span>)</span><br><span class="line">  titleDOM.innerHTML = newTitle.text</span><br><span class="line">  titleDOM.style.color = newTitle.color</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">renderContent</span> (<span class="params">newContent, oldContent = &#123;&#125;</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (newContent === oldContent) <span class="keyword">return</span> <span class="comment">// 数据没有变化就不渲染了</span></span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">'render content...'</span>)</span><br><span class="line">  <span class="keyword">const</span> contentDOM = <span class="built_in">document</span>.getElementById(<span class="string">'content'</span>)</span><br><span class="line">  contentDOM.innerHTML = newContent.text</span><br><span class="line">  contentDOM.style.color = newContent.color</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">stateChanger</span> (<span class="params">state, action</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (!state) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123;</span><br><span class="line">      title: &#123;</span><br><span class="line">        text: <span class="string">'React.js 小书'</span>,</span><br><span class="line">        color: <span class="string">'red'</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">      content: &#123;</span><br><span class="line">        text: <span class="string">'React.js 小书内容'</span>,</span><br><span class="line">        color: <span class="string">'blue'</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">switch</span> (action.type) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'UPDATE_TITLE_TEXT'</span>:</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        ...state,</span><br><span class="line">        title: &#123;</span><br><span class="line">          ...state.title,</span><br><span class="line">          text: action.text</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">'UPDATE_TITLE_COLOR'</span>:</span><br><span class="line">      <span class="keyword">return</span> &#123;</span><br><span class="line">        ...state,</span><br><span class="line">        title: &#123;</span><br><span class="line">          ...state.title,</span><br><span class="line">          color: action.color</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">return</span> state</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> store = createStore(appState, stateChanger)</span><br><span class="line"><span class="keyword">let</span> oldState = store.getState() <span class="comment">// 缓存旧的 state</span></span><br><span class="line">store.subscribe(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> newState = store.getState() <span class="comment">// 数据可能变化，获取新的 state</span></span><br><span class="line">  renderApp(newState, oldState) <span class="comment">// 把新旧的 state 传进去渲染</span></span><br><span class="line">  oldState = newState <span class="comment">// 渲染完以后，新的 newState 变成了旧的 oldState，等待下一次数据变化重新渲染</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">renderApp(store.getState()) <span class="comment">// 首次渲染页面</span></span><br><span class="line">store.dispatch(&#123; <span class="attr">type</span>: <span class="string">'UPDATE_TITLE_TEXT'</span>, <span class="attr">text</span>: <span class="string">'《React.js 小书》'</span> &#125;) <span class="comment">// 修改标题文本</span></span><br><span class="line">store.dispatch(&#123; <span class="attr">type</span>: <span class="string">'UPDATE_TITLE_COLOR'</span>, <span class="attr">color</span>: <span class="string">'blue'</span> &#125;) <span class="comment">// 修改标题颜色</span></span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一段代码，终于理解得比较深了&lt;br&gt;摘自&lt;a href=&quot;http://huziketang.mangojuice.top/books/react/lesson34&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;动手实现Redux&lt;/a&gt;&lt;br&gt;下面这段代码暂时和React没有关系&lt;br&gt;
    
    </summary>
    
    
      <category term="redux" scheme="https://kejieliu.github.io/tags/redux/"/>
    
  </entry>
  
  <entry>
    <title>React Lifecycle总结</title>
    <link href="https://kejieliu.github.io/2019/01/03/ReactLifecycle/"/>
    <id>https://kejieliu.github.io/2019/01/03/ReactLifecycle/</id>
    <published>2019-01-03T14:52:52.000Z</published>
    <updated>2019-01-07T12:30:10.189Z</updated>
    
    <content type="html"><![CDATA[<p>生命周期版本根据React version 16.4进行整理<br><a href="http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/" target="_blank" rel="noopener">React Lifecycle</a></p><p>ADD:<br>getDerivedStateFromProps<br>getSnapshotBeforeUpdate<br>UNSAFE:<br>UNSAFE_componentWillMount<br>UNSAFE_componentWillUpdate<br>UNSAFE_componentWillReceiveProps</p><a id="more"></a><p>常用的生命周期图<br><img src="/assets/react/lifecycle1.png"><br>在常用的生命周期之外，显示不常用的生命周期图<br><img src="/assets/react/lifecycle2.png"></p><h4 id="一、Mounting"><a href="#一、Mounting" class="headerlink" title="一、Mounting"></a>一、Mounting</h4><h5 id="constructor-NaN"><a href="#constructor-NaN" class="headerlink" title="constructor()"></a><a href="https://reactjs.org/docs/react-component.html#constructor" target="_blank" rel="noopener">constructor()</a></h5><h5 id="static-getDerivedStateFromProps"><a href="#static-getDerivedStateFromProps" class="headerlink" title="static getDerivedStateFromProps()"></a><a href="https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops" target="_blank" rel="noopener">static getDerivedStateFromProps()</a></h5><p>用于替代<a href="https://reactjs.org/docs/react-component.html#unsafe_componentwillupdate" target="_blank" rel="noopener">UNSAFE_componentWillUpdate()</a></p><h5 id="render"><a href="#render" class="headerlink" title="render()"></a><a href="https://reactjs.org/docs/react-component.html#render" target="_blank" rel="noopener">render()</a></h5><h5 id="componentDidMount"><a href="#componentDidMount" class="headerlink" title="componentDidMount()"></a><a href="https://reactjs.org/docs/react-component.html#componentdidmount" target="_blank" rel="noopener">componentDidMount()</a></h5><h5 id="UNSAFE-componentWillMount"><a href="#UNSAFE-componentWillMount" class="headerlink" title="UNSAFE_componentWillMount()"></a><a href="https://reactjs.org/docs/react-component.html#unsafe_componentwillmount" target="_blank" rel="noopener">UNSAFE_componentWillMount()</a></h5><p>v17会移除</p><h4 id="二、Updating"><a href="#二、Updating" class="headerlink" title="二、Updating"></a>二、Updating</h4><h5 id="static-getDerivedStateFromProps-1"><a href="#static-getDerivedStateFromProps-1" class="headerlink" title="static getDerivedStateFromProps()"></a><a href="https://reactjs.org/docs/react-component.html#static-getderivedstatefromprops" target="_blank" rel="noopener">static getDerivedStateFromProps()</a></h5><h5 id="shouldComponentUpdate"><a href="#shouldComponentUpdate" class="headerlink" title="shouldComponentUpdate()"></a><a href="https://reactjs.org/docs/react-component.html#shouldcomponentupdate" target="_blank" rel="noopener">shouldComponentUpdate()</a></h5><p>if shouldComponentUpdate() returns false, then UNSAFE_componentWillUpdate(), render(), and componentDidUpdate() will not be invoked</p><h5 id="render-1"><a href="#render-1" class="headerlink" title="render()"></a><a href="https://reactjs.org/docs/react-component.html#render" target="_blank" rel="noopener">render()</a></h5><h5 id="getSnapshotBeforeUpdate"><a href="#getSnapshotBeforeUpdate" class="headerlink" title="getSnapshotBeforeUpdate()"></a><a href="https://reactjs.org/docs/react-component.html#getsnapshotbeforeupdate" target="_blank" rel="noopener">getSnapshotBeforeUpdate()</a></h5><h5 id="componentDidUpdate"><a href="#componentDidUpdate" class="headerlink" title="componentDidUpdate()"></a><a href="https://reactjs.org/docs/react-component.html#componentdidupdate" target="_blank" rel="noopener">componentDidUpdate()</a></h5><h5 id="UNSAFE-componentWillUpdate"><a href="#UNSAFE-componentWillUpdate" class="headerlink" title="UNSAFE_componentWillUpdate()"></a><a href="https://reactjs.org/docs/react-component.html#unsafe_componentwillupdate" target="_blank" rel="noopener">UNSAFE_componentWillUpdate()</a></h5><h5 id="UNSAFE-componentWillReceiveProps"><a href="#UNSAFE-componentWillReceiveProps" class="headerlink" title="UNSAFE_componentWillReceiveProps()"></a><a href="https://reactjs.org/docs/react-component.html#unsafe_componentwillreceiveprops" target="_blank" rel="noopener">UNSAFE_componentWillReceiveProps()</a></h5><h4 id="三、Unmounting"><a href="#三、Unmounting" class="headerlink" title="三、Unmounting"></a>三、Unmounting</h4><h5 id="componentWillUnmount"><a href="#componentWillUnmount" class="headerlink" title="componentWillUnmount()"></a><a href="https://reactjs.org/docs/react-component.html#componentwillunmount" target="_blank" rel="noopener">componentWillUnmount()</a></h5><h4 id="四、Error-Handling"><a href="#四、Error-Handling" class="headerlink" title="四、Error Handling"></a>四、Error Handling</h4><h5 id="static-getDerivedStateFromError"><a href="#static-getDerivedStateFromError" class="headerlink" title="static getDerivedStateFromError()"></a><a href="https://reactjs.org/docs/react-component.html#static-getderivedstatefromerror" target="_blank" rel="noopener">static getDerivedStateFromError()</a></h5><h5 id="componentDidCatch"><a href="#componentDidCatch" class="headerlink" title="componentDidCatch()"></a><a href="https://reactjs.org/docs/react-component.html#componentdidcatch" target="_blank" rel="noopener">componentDidCatch()</a></h5><p>参考<br><a href="https://juejin.im/post/5bea68a6e51d450cb20fdd70" target="_blank" rel="noopener">拥抱react新生命周期–getDerivedStateFromProps</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;生命周期版本根据React version 16.4进行整理&lt;br&gt;&lt;a href=&quot;http://projects.wojtekmaj.pl/react-lifecycle-methods-diagram/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;React Lifecycle&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ADD:&lt;br&gt;getDerivedStateFromProps&lt;br&gt;getSnapshotBeforeUpdate&lt;br&gt;UNSAFE:&lt;br&gt;UNSAFE_componentWillMount&lt;br&gt;UNSAFE_componentWillUpdate&lt;br&gt;UNSAFE_componentWillReceiveProps&lt;/p&gt;
    
    </summary>
    
    
      <category term="React" scheme="https://kejieliu.github.io/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Java学习记录</title>
    <link href="https://kejieliu.github.io/2018/12/27/JavaLearing/"/>
    <id>https://kejieliu.github.io/2018/12/27/JavaLearing/</id>
    <published>2018-12-27T13:03:16.000Z</published>
    <updated>2018-12-29T01:04:42.454Z</updated>
    
    <content type="html"><![CDATA[<p>以下根据后台项目合并请求!165进行记录：</p><h2 id="一、序列化操作"><a href="#一、序列化操作" class="headerlink" title="一、序列化操作"></a>一、序列化操作</h2><p>ObjectMapper为jackson库中自带<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ObjectMapper objectMapper = <span class="keyword">new</span> ObjectMapper();</span><br><span class="line">List&lt;TableTitleIndex&gt; tableTitleIndices = objectMapper.readValue(tableRowName, <span class="keyword">new</span> TypeReference&lt;List&lt;TableTitleIndex&gt;&gt;() &#123;&#125;);</span><br><span class="line">ListPageParam listPageParam = objectMapper.readValue(param, ListPageParam.class);</span><br></pre></td></tr></table></figure></p><a id="more"></a><p>可以将列表、实体类的json字符串序列化成相应的列表、实体类，反之亦然</p><h3 id="1、对象与json字符串、byte数组"><a href="#1、对象与json字符串、byte数组" class="headerlink" title="1、对象与json字符串、byte数组"></a>1、对象与json字符串、byte数组</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">String jsonStr = mapper.writeValueAsString(user);</span><br><span class="line"><span class="keyword">byte</span>[] byteArr = mapper.writeValueAsBytes(user);</span><br><span class="line">XwjUser userDe = mapper.readValue(jsonStr, XwjUser.class);</span><br><span class="line">XwjUser useDe2 = mapper.readValue(byteArr, XwjUser.class);</span><br></pre></td></tr></table></figure><font color="red">注意，对象转json字符串时，对象中的NodeName首字母是大写，转出来是小写</font><h3 id="2、list集合与json字符串"><a href="#2、list集合与json字符串" class="headerlink" title="2、list集合与json字符串"></a>2、list集合与json字符串</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String jsonStr = mapper.writeValueAsString(userList);</span><br><span class="line">List&lt;XwjUser&gt; userListDes = mapper.readValue(jsonStr, List.class);</span><br></pre></td></tr></table></figure><h3 id="3、map与json字符串"><a href="#3、map与json字符串" class="headerlink" title="3、map与json字符串"></a>3、map与json字符串</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String jsonStr = mapper.writeValueAsString(testMap);</span><br><span class="line">Map&lt;String, Object&gt; testMapDes = mapper.readValue(jsonStr, Map.class);</span><br></pre></td></tr></table></figure><h3 id="4、修改转换时的日期格式"><a href="#4、修改转换时的日期格式" class="headerlink" title="4、修改转换时的日期格式"></a>4、修改转换时的日期格式</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mapper.setDateFormat(<span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd HH:mm:ss"</span>));</span><br><span class="line">String jsonStr = mapper.writeValueAsString(user);</span><br></pre></td></tr></table></figure><h2 id="二、时间类操作"><a href="#二、时间类操作" class="headerlink" title="二、时间类操作"></a>二、时间类操作</h2><p>Java8中推荐LocalDate LocalDateTime<br>具体详细请点击<a href="http://www.importnew.com/14140.html" target="_blank" rel="noopener">Java8 日期/时间（Date Time）API指南</a><br>其中重点格式化及解析<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Format examples</span></span><br><span class="line">    LocalDate date = LocalDate.now();</span><br><span class="line">    <span class="comment">//default format</span></span><br><span class="line">    System.out.println(<span class="string">"Default format of LocalDate="</span>+date);</span><br><span class="line">    <span class="comment">//specific format</span></span><br><span class="line">    System.out.println(date.format(DateTimeFormatter.ofPattern(<span class="string">"d::MMM::uuuu"</span>)));</span><br><span class="line">    System.out.println(date.format(DateTimeFormatter.BASIC_ISO_DATE));</span><br><span class="line"> </span><br><span class="line">    LocalDateTime dateTime = LocalDateTime.now();</span><br><span class="line">    <span class="comment">//default format</span></span><br><span class="line">    System.out.println(<span class="string">"Default format of LocalDateTime="</span>+dateTime);</span><br><span class="line">    <span class="comment">//specific format</span></span><br><span class="line">    System.out.println(dateTime.format(DateTimeFormatter.ofPattern(<span class="string">"d::MMM::uuuu HH::mm::ss"</span>)));</span><br><span class="line">    System.out.println(dateTime.format(DateTimeFormatter.BASIC_ISO_DATE));</span><br><span class="line"> </span><br><span class="line">    Instant timestamp = Instant.now();</span><br><span class="line">    <span class="comment">//default format</span></span><br><span class="line">    System.out.println(<span class="string">"Default format of Instant="</span>+timestamp);</span><br><span class="line"> </span><br><span class="line">    <span class="comment">//Parse examples</span></span><br><span class="line">    LocalDateTime dt = LocalDateTime.parse(<span class="string">"27::Apr::2014 21::39::48"</span>,DateTimeFormatter.ofPattern(<span class="string">"d::MMM::uuuu HH::mm::ss"</span>));</span><br><span class="line">    System.out.println(<span class="string">"Default format after parsing = "</span>+dt);</span><br></pre></td></tr></table></figure></p><p>运行结果<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Default format of LocalDate=<span class="number">2014</span>-<span class="number">04</span>-<span class="number">28</span></span><br><span class="line"><span class="number">28</span>::Apr::<span class="number">2014</span></span><br><span class="line"><span class="number">20140428</span></span><br><span class="line">Default format of LocalDateTime=<span class="number">2014</span>-<span class="number">04</span>-<span class="number">28</span>T16:<span class="number">25</span>:<span class="number">49.341</span></span><br><span class="line"><span class="number">28</span>::Apr::<span class="number">2014</span> <span class="number">16</span>::<span class="number">25</span>::<span class="number">49</span></span><br><span class="line"><span class="number">20140428</span></span><br><span class="line">Default format of Instant=<span class="number">2014</span>-<span class="number">04</span>-<span class="number">28</span>T23:<span class="number">25</span>:<span class="number">49.342</span>Z</span><br><span class="line">Default format after parsing = <span class="number">2014</span>-<span class="number">04</span>-<span class="number">27</span>T21:<span class="number">39</span>:<span class="number">48</span></span><br></pre></td></tr></table></figure></p><p>参考资料<br><a href="https://www.cnblogs.com/xuwenjin/p/8976696.html" target="_blank" rel="noopener">ObjectMapper使用</a><br><a href="https://www.journaldev.com/2800/java-8-date-localdate-localdatetime-instant" target="_blank" rel="noopener">Java 8 Date – LocalDate, LocalDateTime, Instant</a><br><a href="http://www.importnew.com/14140.html" target="_blank" rel="noopener">Java8 日期/时间（Date Time）API指南</a></p><p><span id="busuanzi_container_page_pv"><br>  本文阅读量 <span id="busuanzi_value_page_pv"></span><br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以下根据后台项目合并请求!165进行记录：&lt;/p&gt;
&lt;h2 id=&quot;一、序列化操作&quot;&gt;&lt;a href=&quot;#一、序列化操作&quot; class=&quot;headerlink&quot; title=&quot;一、序列化操作&quot;&gt;&lt;/a&gt;一、序列化操作&lt;/h2&gt;&lt;p&gt;ObjectMapper为jackson库中自带&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ObjectMapper objectMapper = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ObjectMapper();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;List&amp;lt;TableTitleIndex&amp;gt; tableTitleIndices = objectMapper.readValue(tableRowName, &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; TypeReference&amp;lt;List&amp;lt;TableTitleIndex&amp;gt;&amp;gt;() &amp;#123;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ListPageParam listPageParam = objectMapper.readValue(param, ListPageParam.class);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Java" scheme="https://kejieliu.github.io/categories/Java/"/>
    
    
      <category term="Java" scheme="https://kejieliu.github.io/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Github Pages and Hexo</title>
    <link href="https://kejieliu.github.io/2018/12/06/Github-Pages-and-Hexo/"/>
    <id>https://kejieliu.github.io/2018/12/06/Github-Pages-and-Hexo/</id>
    <published>2018-12-06T14:20:36.000Z</published>
    <updated>2019-01-07T12:02:08.209Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、GitHub准备"><a href="#一、GitHub准备" class="headerlink" title="一、GitHub准备"></a>一、GitHub准备</h2><p>1、参照<a href="https://pages.github.com" target="_blank" rel="noopener">https://pages.github.com</a> 新建仓库并设置，并测试username.github.io （username为注册名）能够正常访问。<br><a id="more"></a></p><h2 id="二、Hexo"><a href="#二、Hexo" class="headerlink" title="二、Hexo"></a>二、Hexo</h2><p>参照<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">官网</a>搭建及部署至github，过程较简单<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure></p><p>注意点：<br>（1）配置ssh，具体可参考别的文章<br>（2）第1条所说的username必须是注册名，不然会失败，例如我是KejieLiu，则必须创建名为 <strong>KejieLiu.github.io</strong> 的仓库名</p><h2 id="三、更换主题"><a href="#三、更换主题" class="headerlink" title="三、更换主题"></a>三、更换主题</h2><p>本次采用next主题</p><h3 id="1、下载主题"><a href="#1、下载主题" class="headerlink" title="1、下载主题"></a>1、下载主题</h3><p><a href="git clone https://github.com/iissnan/hexo-theme-next themes/next">next主题</a><br>将下载文件放置于themes下</p><h3 id="2、更改配置"><a href="#2、更改配置" class="headerlink" title="2、更改配置"></a>2、更改配置</h3><p>修改hexo配置文件_config.yml的theme: next<br>主题内各种配置参照<a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">Next</a></p><h2 id="四、写作技巧说明"><a href="#四、写作技巧说明" class="headerlink" title="四、写作技巧说明"></a>四、写作技巧说明</h2><h3 id="1、如何让文章进行截断显示"><a href="#1、如何让文章进行截断显示" class="headerlink" title="1、如何让文章进行截断显示"></a>1、如何让文章进行截断显示</h3><p>在需要隐藏的地方加入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- more --&gt;</span><br></pre></td></tr></table></figure></p><p>之后的内容将不会进行展示</p><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a href="https://segmentfault.com/a/1190000004947261" target="_blank" rel="noopener">手把手教你使用Hexo + Github Pages搭建个人独立博客</a><br><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">Next</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、GitHub准备&quot;&gt;&lt;a href=&quot;#一、GitHub准备&quot; class=&quot;headerlink&quot; title=&quot;一、GitHub准备&quot;&gt;&lt;/a&gt;一、GitHub准备&lt;/h2&gt;&lt;p&gt;1、参照&lt;a href=&quot;https://pages.github.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://pages.github.com&lt;/a&gt; 新建仓库并设置，并测试username.github.io （username为注册名）能够正常访问。&lt;br&gt;
    
    </summary>
    
      <category term="hexo" scheme="https://kejieliu.github.io/categories/hexo/"/>
    
    
      <category term="hexo" scheme="https://kejieliu.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>MarkDown</title>
    <link href="https://kejieliu.github.io/2018/12/06/MarkDown/"/>
    <id>https://kejieliu.github.io/2018/12/06/MarkDown/</id>
    <published>2018-12-06T10:53:38.000Z</published>
    <updated>2018-12-28T02:11:02.665Z</updated>
    
    <content type="html"><![CDATA[<p>一、标题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 这是一级标题</span><br><span class="line">## 这是二级标题</span><br><span class="line">### 这是三级标题</span><br><span class="line">#### 这是四级标题</span><br><span class="line">##### 这是五级标题</span><br><span class="line">###### 这是六级标题</span><br></pre></td></tr></table></figure></p><a id="more"></a><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><p>二、字体<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">**这是加粗的文字**</span><br><span class="line">*这是倾斜的文字*`</span><br><span class="line">***这是斜体加粗的文字***</span><br><span class="line">~~这是加删除线的文字~~</span><br></pre></td></tr></table></figure></p><p><strong>这是加粗的文字</strong></p><p><em>这是倾斜的文字</em>`</p><p><strong><em>这是斜体加粗的文字</em></strong></p><p><del>这是加删除线的文字</del></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;/font&gt;</span><br><span class="line">&lt;font color=#0099ff size=7 face=&quot;黑体&quot;&gt;color=#0099ff size=72 face=&quot;黑体&quot;&lt;/font&gt;</span><br><span class="line">&lt;font color=#00ffff size=72&gt;color=#00ffff&lt;/font&gt;</span><br><span class="line">&lt;font color=gray size=72&gt;color=gray&lt;/font&gt;</span><br></pre></td></tr></table></figure><p>呈现效果</p><p><font face="黑体">我是黑体字</font></p><p><font face="微软雅黑">我是微软雅黑</font></p><p><font face="STCAIYUN">我是华文彩云</font></p><p><font color="#0099ff" size="7" face="黑体">color=#0099ff size=72 face=”黑体”</font></p><p><font color="#00ffff" size="72">color=#00ffff</font></p><p><font color="gray" size="72">color=gray</font><br>三、引用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;这是引用的内容</span><br><span class="line">&gt;&gt;这是引用的内容</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容</span><br></pre></td></tr></table></figure></p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><p>四、分割线<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">----</span><br><span class="line">***</span><br><span class="line">*****</span><br></pre></td></tr></table></figure></p><hr><hr><hr><hr><p>五、图片<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![panda](http://wx4.sinaimg.cn/large/8de26d65ly8fnpo4tsuzlj20ij0ijtag.jpg)</span><br></pre></td></tr></table></figure></p><p><img src="http://wx4.sinaimg.cn/large/8de26d65ly8fnpo4tsuzlj20ij0ijtag.jpg" alt="panda"></p><p>直接写img标签即可，改变大小等属性<br><img src="http://wx4.sinaimg.cn/large/8de26d65ly8fnpo4tsuzlj20ij0ijtag.jpg" width="100" height="100"></p><p>六、超链接<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[天健](http://www.pccpa.cn)</span><br><span class="line">[百度](http://baidu.com)</span><br></pre></td></tr></table></figure></p><p><a href="http://www.pccpa.cn" target="_blank" rel="noopener">天健</a><br><a href="http://baidu.com" target="_blank" rel="noopener">百度</a></p><p>七、列表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">无序列表</span><br><span class="line">- 列表内容</span><br><span class="line">+ 列表内容</span><br><span class="line">* 列表内容</span><br><span class="line"></span><br><span class="line">有序列表</span><br><span class="line"></span><br><span class="line">1. 列表内容</span><br><span class="line">2. 列表内容</span><br><span class="line">3. 列表内容</span><br><span class="line"></span><br><span class="line">列表嵌套</span><br><span class="line"></span><br><span class="line">1. 列表内容</span><br><span class="line">   - 嘻嘻</span><br><span class="line">2. 列表内容</span><br><span class="line">3. 列表内容</span><br></pre></td></tr></table></figure></p><p>无序列表</p><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><ul><li>列表内容</li></ul><p>有序列表</p><ol><li>列表内容</li><li>列表内容</li><li>列表内容</li></ol><p>列表嵌套</p><ol><li>列表内容<ul><li>嘻嘻</li></ul></li><li>列表内容</li><li>列表内容</li></ol><p>八、表格<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">姓名|技能|排行</span><br><span class="line">--|:--:|--:</span><br><span class="line">刘备|哭|大哥</span><br><span class="line">关羽|打|二哥</span><br><span class="line">张飞|骂|三弟</span><br></pre></td></tr></table></figure></p><table><thead><tr><th>姓名</th><th style="text-align:center">技能</th><th style="text-align:right">排行</th></tr></thead><tbody><tr><td>刘备</td><td style="text-align:center">哭</td><td style="text-align:right">大哥</td></tr><tr><td>关羽</td><td style="text-align:center">打</td><td style="text-align:right">二哥</td></tr><tr><td>张飞</td><td style="text-align:center">骂</td><td style="text-align:right">三弟</td></tr></tbody></table><p>九、代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`代码内容`</span><br></pre></td></tr></table></figure></p><p>  <code>代码内容</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(<span class="string">"/detail"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> Message <span class="title">resumeDetail</span><span class="params">(@RequestBody String resumeId)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> resumeService.resumeDetail(resumeId);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>十、流程图</p><p>需要配合安装hexo-filter-flowchart</p><div id="flowchart-0" class="flow-chart"></div><p>本文内容于<a href="https://www.jianshu.com/p/191d1e21f7ed" target="_blank" rel="noopener">简书MarkDown教程</a>加工而成</p><p><span id="busuanzi_container_page_pv"><br>  本文阅读量 <span id="busuanzi_value_page_pv"></span><br></span></p><p><script src="https://cdnjs.cloudflare.com/ajax/libs/raphael/2.2.7/raphael.min.js"></script><script src="https://cdnjs.cloudflare.com/ajax/libs/flowchart/1.6.5/flowchart.min.js"></script><textarea id="flowchart-0-code" style="display: none">st=>start: Start|past:>http://www.google.com[blank]e=>end: End:>http://www.google.comop1=>operation: My Operation|pastop2=>operation: Stuff|currentsub1=>subroutine: My Subroutine|invalidcond=>condition: Yesor No?|approved:>http://www.google.comc2=>condition: Good idea|rejectedio=>inputoutput: catch something...|requestst->op1(right)->condcond(yes, right)->c2cond(no)->sub1(left)->op1c2(yes)->io->ec2(no)->op2->e</textarea><textarea id="flowchart-0-options" style="display: none">{"scale":1,"line-width":2,"line-length":50,"text-margin":10,"font-size":12}</textarea><script>  var code = document.getElementById("flowchart-0-code").value;  var options = JSON.parse(decodeURIComponent(document.getElementById("flowchart-0-options").value));  var diagram = flowchart.parse(code);  diagram.drawSVG("flowchart-0", options);</script></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一、标题&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 这是一级标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## 这是二级标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;### 这是三级标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#### 这是四级标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;##### 这是五级标题&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;###### 这是六级标题&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="MarkDown" scheme="https://kejieliu.github.io/tags/MarkDown/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://kejieliu.github.io/2018/12/06/hello-world/"/>
    <id>https://kejieliu.github.io/2018/12/06/hello-world/</id>
    <published>2018-12-06T01:28:23.833Z</published>
    <updated>2018-12-06T12:17:41.204Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.<br><a id="more"></a></p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><p>more<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure></p><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p><p><span id="busuanzi_container_page_pv"><br>  本文阅读量 <span id="busuanzi_value_page_pv"></span><br></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
      <category term="hexo" scheme="https://kejieliu.github.io/tags/hexo/"/>
    
  </entry>
  
</feed>
